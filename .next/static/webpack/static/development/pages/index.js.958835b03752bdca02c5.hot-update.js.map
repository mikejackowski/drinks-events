{"version":3,"file":"static/webpack/static/development/pages/index.js.958835b03752bdca02c5.hot-update.js","sources":["webpack:///./components/event/EventThumbnail.tsx"],"sourcesContent":["import styled from 'styled-components'\nimport { Event } from '../../pages/e/event.types'\nimport { Colors, BoxShadows } from '../../theme/colors'\nimport { useState, useEffect } from 'react'\nimport getDistance from 'geolib/es/getDistance';\n\nconst EventThumbnailWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  border-radius: 10%;\n  box-shadow: ${BoxShadows.unfocusedBoxShadow};\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: ${BoxShadows.focusedBoxShadow};\n  }\n`\n\nconst TitleWrapper = styled.div`\n  display: flex;\n`\n\nconst IdWrapper = styled.div`\n  color: ${Colors.gray};\n`\n\nconst ThumbnailTitle = styled.div`\n  font-weight: bold;\n`\n\nconst LocationWrapper = styled.div``\n\nconst EventThumbnail = (event: Event) => {\n  const [userLat, setUserLat] = useState<number>(0);\n  const [userLon, setUserLon] = useState<number>(0);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position: Position) => {\n      setUserLat(position.coords.latitude)\n      setUserLon(position.coords.longitude)\n    });\n  }, [])\n  const eventLat = event.location.latitude\n  const eventLon = event.location.longitude\n  return (\n    <EventThumbnailWrapper>\n    <TitleWrapper>\n      <IdWrapper>#{event.id}</IdWrapper>\n      <ThumbnailTitle>{event.title}</ThumbnailTitle>\n      <LocationWrapper>{getDistance({latitude: userLat, longitude: userLon}, {latitude: eventLat, longitude: eventLon}, 100)/1000}</LocationWrapper>\n    </TitleWrapper>\n  </EventThumbnailWrapper>\n  )\n}\n\n\nexport default EventThumbnail"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAEA;;;;A","sourceRoot":""}