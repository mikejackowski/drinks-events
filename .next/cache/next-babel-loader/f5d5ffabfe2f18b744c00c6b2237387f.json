{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/mj/repo/siliconrhino/pages/e/[id].tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport BaseEvent from '../../components/event/Event';\nimport React from 'react';\nvar EventWrapper = styled.div(_templateObject());\n\nvar EventPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EventPage, _React$Component);\n\n  function EventPage() {\n    _classCallCheck(this, EventPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EventPage).apply(this, arguments));\n  }\n\n  _createClass(EventPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          id = _this$props.id,\n          time = _this$props.time,\n          title = _this$props.title,\n          creator = _this$props.creator,\n          guests = _this$props.guests,\n          drinkType = _this$props.drinkType,\n          location = _this$props.location,\n          comments = _this$props.comments;\n      return __jsx(EventWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, __jsx(BaseEvent, {\n        id: id,\n        time: time,\n        title: title,\n        creator: creator,\n        guests: guests,\n        drinkType: drinkType,\n        location: location,\n        comments: comments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EventPage;\n}(React.Component);\n\n_defineProperty(EventPage, \"getInitialProps\", function _callee(_ref) {\n  var query, id, item;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref.query;\n          _context.prev = 1;\n          id = query.id;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(axios.get(\"https://mock-api.drinks.test.siliconrhino.io/events/\".concat(id)));\n\n        case 5:\n          item = _context.sent;\n          console.log('item: ', item);\n          return _context.abrupt(\"return\", item.data);\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](1);\n          return _context.abrupt(\"return\", {\n            errors: _context.t0.message\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 10]]);\n});\n\nexport default EventPage;","map":{"version":3,"sources":["/Users/mj/repo/siliconrhino/pages/e/[id].tsx"],"names":["axios","styled","BaseEvent","React","EventWrapper","div","EventPage","props","id","time","title","creator","guests","drinkType","location","comments","Component","query","get","item","console","log","data","errors","message"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,YAAY,GAAGH,MAAM,CAACI,GAAV,mBAAlB;;IAGMC,S;;;;;;;;;;;;;6BAYM;AAAA,wBACmE,KAAKC,KADxE;AAAA,UACDC,EADC,eACDA,EADC;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSC,KADT,eACSA,KADT;AAAA,UACgBC,OADhB,eACgBA,OADhB;AAAA,UACyBC,MADzB,eACyBA,MADzB;AAAA,UACiCC,SADjC,eACiCA,SADjC;AAAA,UAC4CC,QAD5C,eAC4CA,QAD5C;AAAA,UACsDC,QADtD,eACsDA,QADtD;AAER,aACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AACE,QAAA,EAAE,EAAEP,EADN;AAEE,QAAA,IAAI,EAAEC,IAFR;AAGE,QAAA,KAAK,EAAEC,KAHT;AAIE,QAAA,OAAO,EAAEC,OAJX;AAKE,QAAA,MAAM,EAAEC,MALV;AAME,QAAA,SAAS,EAAEC,SANb;AAOE,QAAA,QAAQ,EAAEC,QAPZ;AAQE,QAAA,QAAQ,EAAEC,QARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAcD;;;;EA5BqBZ,KAAK,CAACa,S;;gBAAxBV,S,qBACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASW,UAAAA,KAAT,QAASA,KAAT;AAAA;AAEbT,UAAAA,EAFa,GAENS,KAFM,CAEbT,EAFa;AAAA;AAAA,2CAGFR,KAAK,CAACkB,GAAN,+DAAwEV,EAAxE,EAHE;;AAAA;AAGfW,UAAAA,IAHe;AAIrBC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;AAJqB,2CAKdA,IAAI,CAACG,IALS;;AAAA;AAAA;AAAA;AAAA,2CAOd;AAAEC,YAAAA,MAAM,EAAE,YAAIC;AAAd,WAPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C;;AA8B3B,eAAelB,SAAf","sourcesContent":["import axios from 'axios';\nimport styled from 'styled-components';\nimport BaseEvent from '../../components/event/Event'\nimport { NextPageContext } from 'next';\nimport { Event } from './event.types'\nimport React from 'react';\n\nconst EventWrapper = styled.div`\n`\n\nclass EventPage extends React.Component<Event> {\n  static getInitialProps = async ({ query }: NextPageContext) => {\n    try {\n      const { id } = query\n      const item = await axios.get<Event>(`https://mock-api.drinks.test.siliconrhino.io/events/${id}`);\n      console.log('item: ', item)\n      return item.data\n    } catch (err) {\n      return { errors: err.message }\n    }\n  }\n\n  render () {\n    const {id, time, title, creator, guests, drinkType, location, comments } = this.props;\n    return (\n      <EventWrapper>\n        <BaseEvent\n          id={id}\n          time={time}\n          title={title}\n          creator={creator}\n          guests={guests}\n          drinkType={drinkType}\n          location={location}\n          comments={comments}\n        />\n      </EventWrapper>\n    )\n  }\n}\n\nexport default EventPage;\n"]},"metadata":{},"sourceType":"module"}