{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/mj/repo/siliconrhino/pages/e/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport BaseEvent from '../../components/event/Event';\nimport { useEffect } from 'react';\nvar EventWrapper = styled.div(_templateObject());\n\nvar EventPage = function EventPage(_ref) {\n  var id = _ref.id,\n      time = _ref.time,\n      title = _ref.title,\n      creator = _ref.creator,\n      guests = _ref.guests,\n      drinkType = _ref.drinkType,\n      location = _ref.location,\n      comments = _ref.comments;\n  useEffect(function () {}, []);\n  return __jsx(EventWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(BaseEvent, {\n    id: id,\n    time: time,\n    title: title,\n    creator: creator,\n    guests: guests,\n    drinkType: drinkType,\n    location: location,\n    comments: comments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n};\n\nEventPage.getInitialProps = function _callee(context) {\n  var id, res, event;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          console.log('getting stuff');\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(\"https://mock-api.drinks.test.siliconrhino.io/events/\".concat(id)));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.data);\n\n        case 7:\n          event = _context.sent;\n          console.log(\"Fetched data: \", res);\n          return _context.abrupt(\"return\", {\n            event: event\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default EventPage;\n/**\n * import axios from 'axios';\nimport styled from 'styled-components';\nimport BaseEvent from '../../components/event/Event'\nimport { NextPageContext } from 'next';\nimport { Event } from './event.types'\nimport React from 'react';\n\nconst EventWrapper = styled.div`\n`\n\nclass EventPage extends React.Component<Event> {\n  static getInitialProps = async ({ query }: NextPageContext) => {\n    try {\n      const { id } = query\n      const item = await axios.get<Event>(`https://mock-api.drinks.test.siliconrhino.io/events/${id}`);\n      console.log('item: ', item)\n      return item.data\n    } catch (err) {\n      return { errors: err.message }\n    }\n  }\n\n  render () {\n    const {id, time, title, creator, guests, drinkType, location, comments } = this.props;\n    return (\n      <EventWrapper>\n        <BaseEvent\n          id={id}\n          time={time}\n          title={title}\n          creator={creator}\n          guests={guests}\n          drinkType={drinkType}\n          location={location}\n          comments={comments}\n        />\n      </EventWrapper>\n    )\n  }\n}\n\nexport default EventPage;\n\n */","map":{"version":3,"sources":["/Users/mj/repo/siliconrhino/pages/e/[id].tsx"],"names":["axios","styled","BaseEvent","useEffect","EventWrapper","div","EventPage","id","time","title","creator","guests","drinkType","location","comments","getInitialProps","context","query","console","log","get","res","data","event"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AAEA,SAASC,SAAT,QAA0B,OAA1B;AAGA,IAAMC,YAAY,GAAGH,MAAM,CAACI,GAAV,mBAAlB;;AAGA,IAAMC,SAA0B,GAAG,SAA7BA,SAA6B,OAA+E;AAAA,MAA7EC,EAA6E,QAA7EA,EAA6E;AAAA,MAAzEC,IAAyE,QAAzEA,IAAyE;AAAA,MAAnEC,KAAmE,QAAnEA,KAAmE;AAAA,MAA5DC,OAA4D,QAA5DA,OAA4D;AAAA,MAAnDC,MAAmD,QAAnDA,MAAmD;AAAA,MAA3CC,SAA2C,QAA3CA,SAA2C;AAAA,MAAhCC,QAAgC,QAAhCA,QAAgC;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAChHX,EAAAA,SAAS,CAAC,YAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;AAGA,SACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,EAAE,EAAEI,EADN;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,OAAO,EAAEC,OAJX;AAKE,IAAA,MAAM,EAAEC,MALV;AAME,IAAA,SAAS,EAAEC,SANb;AAOE,IAAA,QAAQ,EAAEC,QAPZ;AAQE,IAAA,QAAQ,EAAEC,QARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAcD,CAlBD;;AAoBAR,SAAS,CAACS,eAAV,GAA4B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBT,UAAAA,EADkB,GACXS,OAAO,CAACC,KADG,CAClBV,EADkB;AAE1BW,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAF0B;AAAA,2CAGRnB,KAAK,CAACoB,GAAN,+DAAwEb,EAAxE,EAHQ;;AAAA;AAGpBc,UAAAA,GAHoB;AAAA;AAAA,2CAINA,GAAG,CAACC,IAJE;;AAAA;AAIpBC,UAAAA,KAJoB;AAK1BL,UAAAA,OAAO,CAACC,GAAR,mBAA8BE,GAA9B;AAL0B,2CAOnB;AAAEE,YAAAA,KAAK,EAALA;AAAF,WAPmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAUA,eAAejB,SAAf;AAGA","sourcesContent":["import axios from 'axios';\nimport styled from 'styled-components';\nimport BaseEvent from '../../components/event/Event'\nimport { NextPage } from 'next';\nimport { useEffect } from 'react';\nimport { Event } from './event.types'\n\nconst EventWrapper = styled.div`\n`\n\nconst EventPage: NextPage<Event> = ({id, time, title, creator, guests, drinkType, location, comments }: Event) => {\n  useEffect(() => {\n\n  }, [])\n  return (\n    <EventWrapper>\n      <BaseEvent\n        id={id}\n        time={time}\n        title={title}\n        creator={creator}\n        guests={guests}\n        drinkType={drinkType}\n        location={location}\n        comments={comments}\n      />\n    </EventWrapper>\n  )\n}\n\nEventPage.getInitialProps = async (context) => {\n  const { id } = context.query;\n  console.log('getting stuff')\n  const res = await axios.get<Event>(`https://mock-api.drinks.test.siliconrhino.io/events/${id}`);\n  const event = await res.data\n  console.log(`Fetched data: `, res);\n\n  return { event };\n};\n\nexport default EventPage;\n\n\n/**\n * import axios from 'axios';\nimport styled from 'styled-components';\nimport BaseEvent from '../../components/event/Event'\nimport { NextPageContext } from 'next';\nimport { Event } from './event.types'\nimport React from 'react';\n\nconst EventWrapper = styled.div`\n`\n\nclass EventPage extends React.Component<Event> {\n  static getInitialProps = async ({ query }: NextPageContext) => {\n    try {\n      const { id } = query\n      const item = await axios.get<Event>(`https://mock-api.drinks.test.siliconrhino.io/events/${id}`);\n      console.log('item: ', item)\n      return item.data\n    } catch (err) {\n      return { errors: err.message }\n    }\n  }\n\n  render () {\n    const {id, time, title, creator, guests, drinkType, location, comments } = this.props;\n    return (\n      <EventWrapper>\n        <BaseEvent\n          id={id}\n          time={time}\n          title={title}\n          creator={creator}\n          guests={guests}\n          drinkType={drinkType}\n          location={location}\n          comments={comments}\n        />\n      </EventWrapper>\n    )\n  }\n}\n\nexport default EventPage;\n\n */"]},"metadata":{},"sourceType":"module"}