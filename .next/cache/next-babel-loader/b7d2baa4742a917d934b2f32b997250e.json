{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/mj/repo/siliconrhino/components/search/Search.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport { DebounceInput } from 'react-debounce-input';\nimport axios from 'axios';\nimport EventThumbnail from '../event/EventThumbnail';\nvar SearchWrapper = styled.div.withConfig({\n  displayName: \"Search__SearchWrapper\",\n  componentId: \"sc-1flz1c3-0\"\n})([\"\"]);\nvar SearchParamButton = styled.div.withConfig({\n  displayName: \"Search__SearchParamButton\",\n  componentId: \"sc-1flz1c3-1\"\n})([\"display:grid;justify-content:center;place-items:center;font-weight:bold;border:1px solid black;background:\", \";\"], function (props) {\n  return props.isSelected ? 'aqua' : 'none';\n});\nvar SearchInput = styled(DebounceInput).withConfig({\n  displayName: \"Search__SearchInput\",\n  componentId: \"sc-1flz1c3-2\"\n})([\"width:50%;border:1px solid black;\"]);\nvar PageNumberButtonWrapper = styled.div.withConfig({\n  displayName: \"Search__PageNumberButtonWrapper\",\n  componentId: \"sc-1flz1c3-3\"\n})([\"display:flex;justify-content:space-around;\"]);\n\nvar Search = function Search() {\n  var _useState = useState(0),\n      pageNo = _useState[0],\n      selectPageNo = _useState[1];\n\n  var _useState2 = useState(5),\n      pageSize = _useState2[0],\n      setPageSize = _useState2[1];\n\n  var _useState3 = useState(''),\n      searchQ = _useState3[0],\n      setSearchQ = _useState3[1];\n\n  var _useState4 = useState([]),\n      allEvents = _useState4[0],\n      setEvents = _useState4[1];\n\n  var _useState5 = useState(false),\n      isLoading = _useState5[0],\n      setLoading = _useState5[1];\n\n  var _useState6 = useState(false),\n      isError = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState(0),\n      eventsNo = _useState7[0],\n      setEventsNo = _useState7[1];\n\n  var _useState8 = useState(1),\n      totalPages = _useState8[0],\n      setTotalPages = _useState8[1];\n  /**\n   * the API does not return total number of items so in order to create proper pagination this have to be done manually\n   */\n\n\n  var createPagination = function createPagination() {\n    var data, page, r;\n    return _regeneratorRuntime.async(function createPagination$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = [];\n            page = 1;\n\n          case 2:\n            if (!true) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.get(\"https://mock-api.drinks.test.siliconrhino.io/events?page=\".concat(page, \"&pageSize=20\")));\n\n          case 5:\n            r = _context.sent;\n            page++;\n            data.push.apply(data, _toConsumableArray(r.data));\n\n            if (!(r.data.length === 0)) {\n              _context.next = 11;\n              break;\n            }\n\n            setEventsNo(r.data.length);\n            return _context.abrupt(\"break\", 13);\n\n          case 11:\n            _context.next = 2;\n            break;\n\n          case 13:\n            setTotalPages(Math.floor(eventsNo / pageSize) + 1);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  useEffect(function () {\n    createPagination();\n  }, []);\n  useEffect(function () {\n    getEvents();\n  }, [pageSize, pageNo, searchQ]);\n  useEffect(function () {\n    setTotalPages(Math.floor(eventsNo / pageSize) + 1);\n  }, [pageSize]);\n\n  var getEvents = function getEvents() {\n    var res, evnts;\n    return _regeneratorRuntime.async(function getEvents$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setLoading(true);\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(\"https://mock-api.drinks.test.siliconrhino.io/events?page=\".concat(pageNo, \"&pageSize=\").concat(pageSize, \"&search=\").concat(searchQ)));\n\n          case 4:\n            res = _context2.sent;\n            evnts = res.data;\n            setEvents(evnts);\n            setLoading(false);\n            _context2.next = 14;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](1);\n            setLoading(false);\n            setError(true);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 10]]);\n  };\n\n  useEffect(function () {}, []);\n\n  if (isError) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Failed to load data.\");\n  }\n\n  var pageButtons = function pageButtons() {\n    var buttons = [];\n\n    var _loop = function _loop(i) {\n      buttons.push(__jsx(SearchParamButton, {\n        key: i,\n        isSelected: pageNo === i,\n        onClick: function onClick() {\n          return selectPageNo(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, i + 1));\n    };\n\n    for (var i = 0; i < totalPages; i++) {\n      _loop(i);\n    }\n\n    return buttons;\n  };\n\n  return __jsx(SearchWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(SearchInput, {\n    minLength: 1,\n    debounceTimeout: 300,\n    placeholder: 'asdf' //@ts-ignore\n    ,\n    onChange: function onChange(event) {\n      return setSearchQ(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"events: \"), isLoading ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"loading...\") : allEvents.map(function (event) {\n    return __jsx(EventThumbnail, {\n      key: event.id,\n      id: event.id,\n      time: event.time,\n      title: event.title,\n      creator: event.creator,\n      guests: event.guests,\n      type: event.type,\n      location: event.location,\n      comments: event.comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    });\n  }), __jsx(PageNumberButtonWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Select page:\"), pageButtons(), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Items per page:\"), __jsx(SearchParamButton, {\n    isSelected: pageSize === 5,\n    onClick: function onClick() {\n      return setPageSize(5);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"5\"), __jsx(SearchParamButton, {\n    isSelected: pageSize === 15,\n    onClick: function onClick() {\n      return setPageSize(15);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"15\"), __jsx(SearchParamButton, {\n    isSelected: pageSize === 22,\n    onClick: function onClick() {\n      return setPageSize(25);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"25\")));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/mj/repo/siliconrhino/components/search/Search.tsx"],"names":["styled","useState","useEffect","DebounceInput","axios","EventThumbnail","SearchWrapper","div","SearchParamButton","props","isSelected","SearchInput","PageNumberButtonWrapper","Search","pageNo","selectPageNo","pageSize","setPageSize","searchQ","setSearchQ","allEvents","setEvents","isLoading","setLoading","isError","setError","eventsNo","setEventsNo","totalPages","setTotalPages","createPagination","data","page","get","r","push","length","Math","floor","getEvents","res","evnts","pageButtons","buttons","i","event","target","value","map","id","time","title","creator","guests","type","location","comments"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\nimport { useState, useEffect } from 'react'\nimport {DebounceInput} from 'react-debounce-input'\nimport axios from 'axios'\nimport { Event } from '../../pages/e/event.types'\nimport EventThumbnail from '../event/EventThumbnail'\n\nconst SearchWrapper = styled.div`\n`\n\nconst SearchParamButton = styled.div<{isSelected: boolean}>`\n  display: grid;\n  justify-content: center;\n  place-items: center;\n  font-weight: bold;\n  border: 1px solid black;\n  background: ${(props) => props.isSelected ? 'aqua' : 'none'};\n`\n\nconst SearchInput = styled(DebounceInput)`\n  width: 50%;\n  border: 1px solid black;\n`\n\nconst PageNumberButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n`\n\n\n\nconst Search = () => {\n  const [pageNo, selectPageNo] = useState(0)\n  const [pageSize, setPageSize] = useState(5)\n  const [searchQ, setSearchQ] = useState('')\n  const [allEvents, setEvents] = useState<Event[]>([])\n  const [isLoading, setLoading] = useState(false)\n  const [isError, setError] = useState(false)\n  const [eventsNo, setEventsNo] = useState(0)\n  const [totalPages, setTotalPages] = useState(1)\n\n  /**\n   * the API does not return total number of items so in order to create proper pagination this have to be done manually\n   */\n  const createPagination = async () => {\n    let data = [];\n    let page = 1;\n    while(true) {\n      const r = await axios.get(`https://mock-api.drinks.test.siliconrhino.io/events?page=${page}&pageSize=20`);\n      page++;\n      data.push(...r.data);\n      if(r.data.length === 0) {\n        setEventsNo(r.data.length)\n        break;\n      }\n    }\n    setTotalPages(Math.floor(eventsNo / pageSize) + 1)\n  }\n\n  useEffect(() => {\n    createPagination();\n  }, [])\n\n  useEffect(() => {\n    getEvents()\n  }, [pageSize, pageNo, searchQ])\n\n  useEffect(() => {\n    setTotalPages(Math.floor(eventsNo / pageSize) + 1)\n  }, [pageSize])\n\n  const getEvents = async () => {\n    setLoading(true)\n    try {\n      const res = await axios.get(`https://mock-api.drinks.test.siliconrhino.io/events?page=${pageNo}&pageSize=${pageSize}&search=${searchQ}`)\n      const evnts: Event[] = res.data\n      setEvents(evnts)\n      setLoading(false)\n    }\n    catch (err) {\n      setLoading(false)\n      setError(true)\n    }\n  }\n\n  useEffect(() => {}, [])\n  if (isError) {\n    return (\n      <div>Failed to load data.</div>\n    )\n  }\n\n  const pageButtons = () => {\n    let buttons: JSX.Element[] = []\n    for (let i = 0; i < totalPages; i++) {\n      buttons.push(\n        <SearchParamButton key={i} isSelected={pageNo === i} onClick={() => selectPageNo(i)}>{i+1}</SearchParamButton>\n      )\n    }\n    return buttons\n  }\n\n  return (\n    <SearchWrapper>\n      <SearchInput\n        minLength={1}\n        debounceTimeout={300}\n        placeholder={'asdf'}\n        //@ts-ignore\n        onChange={event => setSearchQ(event.target.value)}\n      />\n      <div>events: </div>\n      {\n        isLoading ?\n        <div>loading...</div>\n      :\n        allEvents.map((event) => (\n          <EventThumbnail\n            key={event.id}\n            id={event.id}\n            time={event.time}\n            title={event.title}\n            creator={event.creator}\n            guests={event.guests}\n            type={event.type}\n            location={event.location}\n            comments={event.comments}\n          />\n        ))\n      }\n      <PageNumberButtonWrapper>\n        <div>Select page:</div>\n        {pageButtons()}\n        <div>Items per page:</div>\n        <SearchParamButton isSelected={pageSize === 5} onClick={() => setPageSize(5)}>5</SearchParamButton>\n        <SearchParamButton isSelected={pageSize === 15} onClick={() => setPageSize(15)}>15</SearchParamButton>\n        <SearchParamButton isSelected={pageSize === 22} onClick={() => setPageSize(25)}>25</SearchParamButton>\n      </PageNumberButtonWrapper>\n    </SearchWrapper>\n  )\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}