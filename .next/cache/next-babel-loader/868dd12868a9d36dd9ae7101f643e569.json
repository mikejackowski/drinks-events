{"ast":null,"code":"var _jsxFileName = \"/Users/mj/repo/siliconrhino/components/event/Event.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport User from '../user/User';\nimport Comment from '../comment/Comment';\nconst EventWrapper = styled.div`\n`;\nconst TitleWrapper = styled.div`\n  font-weight: bold;\n`;\n\nconst BaseEvent = ({\n  id,\n  time,\n  title,\n  creator,\n  guests,\n  drinkType,\n  location,\n  comments\n}) => __jsx(EventWrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, __jsx(TitleWrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, title), __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"id: \", id), __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"time: \", time), __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \"Created by: \", creator), __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"at: \", location.name, \" (\", location.latitude, \", \", location.longitude, \")\"), __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"what are we drinking: \", drinkType), __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"Guests: \"), guests.length > 0 ? guests.map(guest => __jsx(User, {\n  name: guest.name,\n  avatarUrl: guest.avatarUrl,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n})) : __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, \"No guests :(\"), comments.length > 0 && __jsx(React.Fragment, null, __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, \"Comments:\"), comments.map(comment => __jsx(Comment, {\n  user: comment.user,\n  timestamp: comment.timestamp,\n  message: comment.message,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}))));\n\nexport default BaseEvent;","map":{"version":3,"sources":["/Users/mj/repo/siliconrhino/components/event/Event.tsx"],"names":["styled","User","Comment","EventWrapper","div","TitleWrapper","BaseEvent","id","time","title","creator","guests","drinkType","location","comments","name","latitude","longitude","length","map","guest","avatarUrl","comment","user","timestamp","message"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,YAAY,GAAGH,MAAM,CAACI,GAAI;CAAhC;AAGA,MAAMC,YAAY,GAAGL,MAAM,CAACI,GAAI;;CAAhC;;AAIA,MAAME,SAAS,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAKC,EAAAA,IAAL;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA,MAA3B;AAAmCC,EAAAA,SAAnC;AAA8CC,EAAAA,QAA9C;AAAwDC,EAAAA;AAAxD,CAAD,KAChB,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAeL,KAAf,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAUF,EAAV,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAYC,IAAZ,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkBE,OAAlB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAUG,QAAQ,CAACE,IAAnB,QAA2BF,QAAQ,CAACG,QAApC,QAAgDH,QAAQ,CAACI,SAAzD,MALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA4BL,SAA5B,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAQGD,MAAM,CAACO,MAAP,GAAgB,CAAhB,GACCP,MAAM,CAACQ,GAAP,CAAYC,KAAD,IACX,MAAC,IAAD;AAAM,EAAA,IAAI,EAAEA,KAAK,CAACL,IAAlB;AAAwB,EAAA,SAAS,EAAEK,KAAK,CAACC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,CADD,GAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ,EAeGP,QAAQ,CAACI,MAAT,GAAkB,CAAlB,IACC,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEOJ,QAAQ,CAACK,GAAT,CAAcG,OAAD,IACZ,MAAC,OAAD;AAAS,EAAA,IAAI,EAAEA,OAAO,CAACC,IAAvB;AAA6B,EAAA,SAAS,EAAED,OAAO,CAACE,SAAhD;AAA2D,EAAA,OAAO,EAAEF,OAAO,CAACG,OAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CAFP,CAhBJ,CADF;;AA2BA,eAAenB,SAAf","sourcesContent":["import styled from 'styled-components'\nimport { Event } from '../../pages/e/event.types'\nimport User from '../user/User'\nimport Comment from '../comment/Comment'\n\nconst EventWrapper = styled.div`\n`\n\nconst TitleWrapper = styled.div`\n  font-weight: bold;\n`\n\nconst BaseEvent = ({id, time, title, creator, guests, drinkType, location, comments }: Event) => (\n  <EventWrapper>\n    <TitleWrapper>{title}</TitleWrapper>\n    <div>id: {id}</div>\n    <div>time: {time}</div>\n    <div>Created by: {creator}</div>\n    <div>at: {location.name} ({location.latitude}, {location.longitude})</div>\n    <div>what are we drinking: {drinkType}</div>\n    <div>Guests: </div>\n    {guests.length > 0 ?\n      guests.map((guest) => (\n      <User name={guest.name} avatarUrl={guest.avatarUrl}/>\n      ))\n      :\n      <div>No guests :(</div>\n    }\n    {comments.length > 0 &&\n      <>\n          <div>Comments:</div>\n            {comments.map((comment) => (\n              <Comment user={comment.user} timestamp={comment.timestamp} message={comment.message}/>\n            ))}\n      </>\n    }\n  </EventWrapper>\n)\n\nexport default BaseEvent"]},"metadata":{},"sourceType":"module"}